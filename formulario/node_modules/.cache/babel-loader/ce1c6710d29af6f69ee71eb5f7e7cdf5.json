{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cgonz\\\\Proyecto\\\\formulario\\\\src\\\\componentes\\\\Formulario_Cliente.js\";\nimport React from \"react\";\nimport { Formulario, ContenedorBotonCentrado, Boton, LeyendaError, MensajeError, DivContenedor, Input, Encabezado, Enlace, Navegador, Label } from \"./../elementos/formularios\";\nimport './../estilos.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartShopping, faI } from '@fortawesome/free-solid-svg-icons'; // import Input from \"./../componentes/Input\";\n\nimport { esNombre, esCedula, esDireccion, esTelefono } from \"./Validaciones\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.actualizarState = this.actualizarState.bind(this);\n    this.state = {\n      value: \"\",\n      error: false,\n      mensajeError: \"\"\n    };\n  }\n\n  actualizarState(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(this.props.validacion(value));\n\n    if (this.props.validacion(value)) {\n      this.setState({\n        value,\n        error: false,\n        mensajeError: \"\"\n      });\n      this.props.actualizarState({\n        name,\n        value,\n        error: false\n      });\n    } else {\n      this.setState({\n        value,\n        error: true,\n        mensajeError: this.props.mensajeError\n      });\n      this.props.actualizarState({\n        name,\n        value,\n        error: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"id-\" + this.props.name,\n        children: this.props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"id-\" + this.props.name,\n        type: \"text\",\n        name: this.props.name,\n        placeholder: this.props.placeholder,\n        onChange: this.actualizarState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), this.state.error ? /*#__PURE__*/_jsxDEV(LeyendaError, {\n        children: this.state.mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass FormularioClientes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n    this.actualizarState = this.actualizarState.bind(this);\n    this.state = {\n      nombre: {\n        value: \"\",\n        error: true\n      },\n      direccion: {\n        value: \"\",\n        error: true\n      },\n      cedula: {\n        value: \"\",\n        error: true\n      },\n      telefono: {\n        value: \"\",\n        error: true\n      }\n    };\n  }\n\n  actualizarState(input) {\n    this.setState({ ...this.state,\n      [input.name]: {\n        value: input.value,\n        error: input.error\n      }\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  submit(e) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Encabezado, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titulo\",\n          children: \"AGREGAR PRODUCTO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navegador, {\n        children: [/*#__PURE__*/_jsxDEV(Enlace, {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 28\n          }, this), \" Inicio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Enlace, {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCartShopping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 28\n          }, this), \" Carrito\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DivContenedor, {\n        children: /*#__PURE__*/_jsxDEV(Formulario, {\n          onSubmit: this.submit,\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Nombre\",\n            name: \"nombre\",\n            placeholder: \"nombre\",\n            validacion: esNombre,\n            mensajeError: \"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Apellido\",\n            name: \"apellido\",\n            placeholder: \"apellido\",\n            validacion: esNombre,\n            mensajeError: \"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Cedula\",\n            name: \"cedula\",\n            placeholder: \"0923377972\",\n            validacion: esCedula,\n            mensajeError: \"El campo no puede quedar vacio y debe ingresar 10 numeros\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Direccion\",\n            name: \"direccion\",\n            placeholder: \"Direccion del cliente\",\n            validacion: esDireccion,\n            mensajeError: \"El campo no puede quedar vacio\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Telefono\",\n            name: \"telefono\",\n            placeholder: \"Telefono del cliente\",\n            validacion: esTelefono,\n            mensajeError: \"El campo no puede quedar vacio\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), this.state.cedula.value === \"\" || this.state.nombre === \"\" ? /*#__PURE__*/_jsxDEV(MensajeError, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Error:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), \" Por favor rellene el formulario correctamente\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(ContenedorBotonCentrado, {\n            children: /*#__PURE__*/_jsxDEV(Boton, {\n              type: \"submit\",\n              disabled: this.state.nombre.error || this.state.cedula.error || this.state.direccion.error || this.state.telefono.error,\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormularioClientes; // import React, { useState } from \"react\";\n// import { Formulario, ContenedorBotonCentrado, Boton, MensajeExito, MensajeError, DivContenedor, Encabezado, Enlace, Navegador } from \"./../elementos/formularios\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faExclamationTriangle, faCartShopping, faI } from '@fortawesome/free-solid-svg-icons';\n// import Input from \"./../componentes/Input\";\n// const FormularioCliente = () => {\n//   const [cedula, cambiarCedula] = useState({ campo: '', valido: null });\n//   const [nombre, cambiarNombre] = useState({ campo: '', valido: null });\n//   const [apellido, cambiarApellido] = useState({ campo: '', valido: null });\n//   const [direccion, cambiarDireccion] = useState({ campo: '', valido: null });\n//   const [telefono, cambiarTelefono] = useState({ campo: '', valido: null });\n//   const [formularioValido, cambiarFormularioValido] = useState(null);\n//   const expresiones = {\n//     //usuario: /^[a-zA-Z0-9\\_\\-]{4,16}$/, // Letras, numeros, guion y guion_bajo\n//     direccion: /^[a-zA-Z0-9\\s]{4,16}$/,\n//     nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\n//     apellido: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n//     // password: /^.{4,12}$/, // 4 a 12 digitos.\n//     //correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n//     cedula: /^\\d{10,10}$/,\n//     telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\n//     precio: /^[\\d{1,4}]+.[\\d{1,2}]+$/,\n//     stock: /^\\d{1,4}$/,\n//     fecha: /^[a-zA-Z0-9_.+-]/\n//   }\n//   const onSubmit = (e) => {\n//     e.preventDefault();\n//     if (\n//       cedula.valido === 'true' &&\n//       nombre.valido === 'true' &&\n//       apellido.valido === 'true' &&\n//       direccion.valido === 'true' &&\n//       telefono.valido === 'true'\n//     ) {\n//       cambiarFormularioValido(true);\n//       cambiarCedula({ campo: '', valido: null });\n//       cambiarNombre({ campo: '', valido: null });\n//       cambiarApellido({ campo: '', valido: null });\n//       cambiarDireccion({ campo: '', valido: null });\n//       cambiarTelefono({ campo: '', valido: null });\n//     } else {\n//       cambiarFormularioValido(false);\n//     }\n//   }\n//   return (\n//     <main>\n//       <Encabezado>\n//         <h1>AGREGAR CLIENTE</h1>\n//       </Encabezado>\n//       <Navegador>\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\n//       </Navegador>\n//       <DivContenedor>\n//         <Formulario action=\"\" onSubmit={onSubmit}>\n//           <Input\n//             estado={nombre}\n//             cambiarEstado={cambiarNombre}\n//             tipo=\"text\"\n//             label=\"Nombre:\"\n//             placeholder=\"Cesar\"\n//             name=\"nombre\"\n//             leyendaError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\n//             expresionRegular={expresiones.nombre}\n//           />\n//           <Input\n//             estado={apellido}\n//             cambiarEstado={cambiarApellido}\n//             tipo=\"text\"\n//             label=\"Apellido:\"\n//             placeholder=\"Moreno\"\n//             name=\"apellido\"\n//             leyendaError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\n//             expresionRegular={expresiones.apellido}\n//           />\n//           <Input\n//             estado={cedula}\n//             cambiarEstado={cambiarCedula}\n//             tipo=\"text\"\n//             label=\"Cedula:\"\n//             placeholder=\"0923377972\"\n//             name=\"cedula\"\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros\"\n//             expresionRegular={expresiones.cedula}\n//           />\n//           <Input\n//             estado={direccion}\n//             cambiarEstado={cambiarDireccion}\n//             tipo=\"text\"\n//             label=\"Direccion:\"\n//             placeholder=\"Direccion del envio\"\n//             name=\"direccion\"\n//             leyendaError=\"El campo no puede quedar vacio\"\n//             expresionRegular={expresiones.direccion}\n//           />\n//           <Input\n//             estado={telefono}\n//             cambiarEstado={cambiarTelefono}\n//             tipo=\"text\"\n//             label=\"Telefono:\"\n//             placeholder=\"0919784316 o 0762456\"\n//             name=\"fecha\"\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros\"\n//             expresionRegular={expresiones.telefono}\n//           />\n//           {formularioValido === false && <MensajeError>\n//             <p>\n//               <FontAwesomeIcon icon={faExclamationTriangle} />\n//               <b>Error:</b> Por favor rellene el formulario correctamente\n//             </p>\n//           </MensajeError>}\n//           <ContenedorBotonCentrado>\n//             <Boton type=\"submit\">Enviar</Boton>\n//             {formularioValido === true && <MensajeExito>El formulario se envio correctamente!</MensajeExito>}\n//           </ContenedorBotonCentrado>\n//         </Formulario>\n//       </DivContenedor>\n//     </main>\n//   );\n// }\n// export default FormularioCliente;","map":{"version":3,"sources":["C:/Users/cgonz/Proyecto/formulario/src/componentes/Formulario_Cliente.js"],"names":["React","Formulario","ContenedorBotonCentrado","Boton","LeyendaError","MensajeError","DivContenedor","Input","Encabezado","Enlace","Navegador","Label","FontAwesomeIcon","faCartShopping","faI","esNombre","esCedula","esDireccion","esTelefono","InputText","Component","constructor","props","actualizarState","bind","state","value","error","mensajeError","e","name","target","console","log","validacion","setState","render","label","placeholder","FormularioClientes","submit","nombre","direccion","cedula","telefono","input"],"mappings":"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":["import React from \"react\";\r\nimport { Formulario, ContenedorBotonCentrado, Boton, LeyendaError, MensajeError, DivContenedor, Input, Encabezado, Enlace, Navegador, Label } from \"./../elementos/formularios\";\r\nimport './../estilos.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartShopping, faI } from '@fortawesome/free-solid-svg-icons';\r\n// import Input from \"./../componentes/Input\";\r\nimport { esNombre, esCedula, esDireccion, esTelefono } from \"./Validaciones\";\r\n\r\n\r\nclass InputText extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.actualizarState = this.actualizarState.bind(this);\r\n    this.state = {\r\n      value: \"\",\r\n      error: false,\r\n      mensajeError: \"\"\r\n    };\r\n  }\r\n\r\n  actualizarState(e) {\r\n    const { name, value } = e.target;\r\n    console.log(this.props.validacion(value));\r\n\r\n    if (this.props.validacion(value)) {\r\n      this.setState({\r\n        value,\r\n        error: false,\r\n        mensajeError: \"\"\r\n      });\r\n      this.props.actualizarState({\r\n        name, value, error: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        value,\r\n        error: true,\r\n        mensajeError: this.props.mensajeError\r\n      });\r\n      this.props.actualizarState({\r\n        name, value, error: true\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Label htmlFor={\"id-\" + this.props.name}>{this.props.label}</Label>\r\n        <Input\r\n          id={\"id-\" + this.props.name}\r\n          type=\"text\"\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          onChange={this.actualizarState}\r\n        />\r\n        {\r\n          this.state.error ? (\r\n            <LeyendaError>{this.state.mensajeError}</LeyendaError>\r\n          ) : (\"\")\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass FormularioClientes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submit = this.submit.bind(this);\r\n    this.actualizarState = this.actualizarState.bind(this);\r\n    this.state = {\r\n      nombre: {\r\n        value: \"\",\r\n        error: true\r\n      },\r\n      direccion: {\r\n        value: \"\",\r\n        error: true\r\n      },\r\n      cedula: {\r\n        value: \"\",\r\n        error: true\r\n      },\r\n      telefono: {\r\n        value: \"\",\r\n        error: true\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  actualizarState(input) {\r\n    this.setState({\r\n      ...this.state,\r\n      [input.name]: {\r\n        value: input.value,\r\n        error: input.error\r\n      }\r\n    }, () => { console.log(this.state); });\r\n\r\n  }\r\n\r\n  submit(e) {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Encabezado>\r\n          <h1 className=\"titulo\">AGREGAR PRODUCTO</h1>\r\n        </Encabezado>\r\n        <Navegador>\r\n          <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\r\n\r\n          <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\r\n        </Navegador>\r\n        <DivContenedor>\r\n          <Formulario onSubmit={this.submit}>\r\n            <InputText\r\n              label=\"Nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"nombre\"\r\n              validacion={esNombre}\r\n              mensajeError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <InputText\r\n              label=\"Apellido\"\r\n              name=\"apellido\"\r\n              placeholder=\"apellido\"\r\n              validacion={esNombre}\r\n              mensajeError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <InputText\r\n              label=\"Cedula\"\r\n              name=\"cedula\"\r\n              placeholder=\"0923377972\"\r\n              validacion={esCedula}\r\n              mensajeError=\"El campo no puede quedar vacio y debe ingresar 10 numeros\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <InputText\r\n              label=\"Direccion\"\r\n              name=\"direccion\"\r\n              placeholder=\"Direccion del cliente\"\r\n              validacion={esDireccion}\r\n              mensajeError=\"El campo no puede quedar vacio\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <InputText\r\n              label=\"Telefono\"\r\n              name=\"telefono\"\r\n              placeholder=\"Telefono del cliente\"\r\n              validacion={esTelefono}\r\n              mensajeError=\"El campo no puede quedar vacio\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            {\r\n            this.state.cedula.value === \"\" || this.state.nombre ===\"\" ? (\r\n              <MensajeError>\r\n                <p>\r\n                  <b>Error:</b> Por favor rellene el formulario correctamente\r\n                </p>\r\n              </MensajeError>\r\n            ) : (\"\")\r\n            }\r\n\r\n            <ContenedorBotonCentrado>\r\n              <Boton type=\"submit\" disabled={this.state.nombre.error\r\n                || this.state.cedula.error || this.state.direccion.error || this.state.telefono.error}>\r\n                Enviar\r\n              </Boton>\r\n            </ContenedorBotonCentrado>\r\n          </Formulario>\r\n        </DivContenedor>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default FormularioClientes;\r\n// import React, { useState } from \"react\";\r\n// import { Formulario, ContenedorBotonCentrado, Boton, MensajeExito, MensajeError, DivContenedor, Encabezado, Enlace, Navegador } from \"./../elementos/formularios\";\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faExclamationTriangle, faCartShopping, faI } from '@fortawesome/free-solid-svg-icons';\r\n// import Input from \"./../componentes/Input\";\r\n// const FormularioCliente = () => {\r\n//   const [cedula, cambiarCedula] = useState({ campo: '', valido: null });\r\n//   const [nombre, cambiarNombre] = useState({ campo: '', valido: null });\r\n//   const [apellido, cambiarApellido] = useState({ campo: '', valido: null });\r\n//   const [direccion, cambiarDireccion] = useState({ campo: '', valido: null });\r\n//   const [telefono, cambiarTelefono] = useState({ campo: '', valido: null });\r\n//   const [formularioValido, cambiarFormularioValido] = useState(null);\r\n//   const expresiones = {\r\n//     //usuario: /^[a-zA-Z0-9\\_\\-]{4,16}$/, // Letras, numeros, guion y guion_bajo\r\n//     direccion: /^[a-zA-Z0-9\\s]{4,16}$/,\r\n//     nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\r\n//     apellido: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\r\n//     // password: /^.{4,12}$/, // 4 a 12 digitos.\r\n//     //correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n//     cedula: /^\\d{10,10}$/,\r\n//     telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\r\n//     precio: /^[\\d{1,4}]+.[\\d{1,2}]+$/,\r\n//     stock: /^\\d{1,4}$/,\r\n//     fecha: /^[a-zA-Z0-9_.+-]/\r\n//   }\r\n//   const onSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (\r\n//       cedula.valido === 'true' &&\r\n//       nombre.valido === 'true' &&\r\n//       apellido.valido === 'true' &&\r\n//       direccion.valido === 'true' &&\r\n//       telefono.valido === 'true'\r\n//     ) {\r\n//       cambiarFormularioValido(true);\r\n//       cambiarCedula({ campo: '', valido: null });\r\n//       cambiarNombre({ campo: '', valido: null });\r\n//       cambiarApellido({ campo: '', valido: null });\r\n//       cambiarDireccion({ campo: '', valido: null });\r\n//       cambiarTelefono({ campo: '', valido: null });\r\n\r\n\r\n//     } else {\r\n//       cambiarFormularioValido(false);\r\n//     }\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <main>\r\n//       <Encabezado>\r\n//         <h1>AGREGAR CLIENTE</h1>\r\n//       </Encabezado>\r\n//       <Navegador>\r\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\r\n\r\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\r\n//       </Navegador>\r\n//       <DivContenedor>\r\n//         <Formulario action=\"\" onSubmit={onSubmit}>\r\n\r\n//           <Input\r\n//             estado={nombre}\r\n//             cambiarEstado={cambiarNombre}\r\n//             tipo=\"text\"\r\n//             label=\"Nombre:\"\r\n//             placeholder=\"Cesar\"\r\n//             name=\"nombre\"\r\n//             leyendaError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\r\n//             expresionRegular={expresiones.nombre}\r\n//           />\r\n//           <Input\r\n//             estado={apellido}\r\n//             cambiarEstado={cambiarApellido}\r\n//             tipo=\"text\"\r\n//             label=\"Apellido:\"\r\n//             placeholder=\"Moreno\"\r\n//             name=\"apellido\"\r\n//             leyendaError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\r\n//             expresionRegular={expresiones.apellido}\r\n//           />\r\n//           <Input\r\n//             estado={cedula}\r\n//             cambiarEstado={cambiarCedula}\r\n//             tipo=\"text\"\r\n//             label=\"Cedula:\"\r\n//             placeholder=\"0923377972\"\r\n//             name=\"cedula\"\r\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros\"\r\n//             expresionRegular={expresiones.cedula}\r\n//           />\r\n//           <Input\r\n//             estado={direccion}\r\n//             cambiarEstado={cambiarDireccion}\r\n//             tipo=\"text\"\r\n//             label=\"Direccion:\"\r\n//             placeholder=\"Direccion del envio\"\r\n//             name=\"direccion\"\r\n//             leyendaError=\"El campo no puede quedar vacio\"\r\n//             expresionRegular={expresiones.direccion}\r\n//           />\r\n//           <Input\r\n//             estado={telefono}\r\n//             cambiarEstado={cambiarTelefono}\r\n//             tipo=\"text\"\r\n//             label=\"Telefono:\"\r\n//             placeholder=\"0919784316 o 0762456\"\r\n//             name=\"fecha\"\r\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros\"\r\n//             expresionRegular={expresiones.telefono}\r\n//           />\r\n//           {formularioValido === false && <MensajeError>\r\n//             <p>\r\n//               <FontAwesomeIcon icon={faExclamationTriangle} />\r\n//               <b>Error:</b> Por favor rellene el formulario correctamente\r\n//             </p>\r\n//           </MensajeError>}\r\n//           <ContenedorBotonCentrado>\r\n//             <Boton type=\"submit\">Enviar</Boton>\r\n//             {formularioValido === true && <MensajeExito>El formulario se envio correctamente!</MensajeExito>}\r\n//           </ContenedorBotonCentrado>\r\n//         </Formulario>\r\n//       </DivContenedor>\r\n//     </main>\r\n//   );\r\n// }\r\n\r\n// export default FormularioCliente;"]},"metadata":{},"sourceType":"module"}