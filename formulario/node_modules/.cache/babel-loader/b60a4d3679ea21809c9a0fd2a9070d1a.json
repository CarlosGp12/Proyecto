{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cgonz\\\\Proyecto\\\\formulario\\\\src\\\\componentes\\\\Formulario_Producto.js\";\nimport React, { useState } from \"react\";\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeExito, LeyendaError, MensajeError, DivContenedor, Input, Encabezado, Enlace, Navegador, Label } from \"./../elementos/formularios\";\nimport './../estilos.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle, faCartShopping, faI } from '@fortawesome/free-solid-svg-icons'; // import Input from \"./../componentes/Input\";\n\nimport { esNombre, esPrecio } from \"./Validaciones\";\nimport { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputChecbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.actualizarState = this.actualizarState.bind(this);\n    this.state = {\n      activo: false\n    };\n  }\n\n}\n\nclass InputText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.actualizarState = this.actualizarState.bind(this);\n    this.state = {\n      value: \"\",\n      error: false,\n      mensajeError: \"\"\n    };\n  }\n\n  actualizarState(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(this.props.validacion(value));\n\n    if (this.props.validacion(value)) {\n      this.setState({\n        value,\n        error: false,\n        mensajeError: \"\"\n      });\n      this.props.actualizarState({\n        name,\n        value,\n        error: false\n      });\n    } else {\n      this.setState({\n        value,\n        error: true,\n        mensajeError: this.props.mensajeError\n      });\n      this.props.actualizarState({\n        name,\n        value,\n        error: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"id-\" + this.props.name,\n        children: this.props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"id-\" + this.props.name,\n        type: \"text\",\n        name: this.props.name,\n        placeholder: this.props.placeholder,\n        onChange: this.actualizarState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), this.state.error ? /*#__PURE__*/_jsxDEV(LeyendaError, {\n        children: this.state.mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass FormularioProductos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n    this.actualizarState = this.actualizarState.bind(this);\n    this.state = {\n      nombre: {\n        value: \"\",\n        error: false\n      },\n      precio: {\n        value: \"\",\n        error: false\n      }\n    };\n  }\n\n  actualizarState(input) {\n    this.setState({ ...this.state,\n      [input.name]: {\n        value: input.value,\n        error: input.error\n      }\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  submit(e) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Encabezado, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titulo\",\n          children: \"AGREGAR PRODUCTO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navegador, {\n        children: [/*#__PURE__*/_jsxDEV(Enlace, {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 28\n          }, this), \" Inicio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Enlace, {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCartShopping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 28\n          }, this), \" Carrito\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DivContenedor, {\n        children: /*#__PURE__*/_jsxDEV(Formulario, {\n          onSubmit: this.submit,\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Nombre\",\n            name: \"nombre\",\n            placeholder: \"nombre\",\n            validacion: esNombre,\n            mensajeError: \"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            label: \"Precio\",\n            name: \"precio\",\n            placeholder: \"#.##\",\n            validacion: esPrecio,\n            mensajeError: \"El campo no debe estar vacio, solo puede ingresar numeros con decimales\",\n            actualizarState: this.actualizarState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ContenedorBotonCentrado, {\n            children: /*#__PURE__*/_jsxDEV(Boton, {\n              type: \"submit\",\n              disabled: this.state.nombre.error || this.state.nombre.value === \"\" || this.state.precio.error || this.state.precio.value === \"\",\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormularioProductos; // const FormularioProductos = () => {\n//   const [nombre, cambiarNombre] = useState({ campo: '', valido: null });\n//   const [precio, cambiarPrecio] = useState({ campo: '', valido: null });\n//   const [stock, cambiarStock] = useState({ campo: '', valido: null });\n//   const [idproducto, cambiarIdproducto] = useState({ campo: '', valido: null });\n//   const [marca, cambiarMarca] = useState({ campo: '', valido: null });\n//   const [formularioValido, cambiarFormularioValido] = useState(null);\n//   const expresiones = {\n//     // usuario: /^[a-zA-Z0-9\\_\\-]{4,16}$/, // Letras, numeros, guion y guion_bajo\n//     nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\n//     // password: /^.{4,12}$/, // 4 a 12 digitos.\n//     //correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n//     telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\n//     precio: /^[\\d{1,4}]+.[\\d{1,2}]+$/,\n//     stock: /^\\d{1,4}$/,\n//     idproducto: /^\\d{1,4}$/\n//   }\n//   const onSubmit = (e) => {\n//     e.preventDefault();\n//     if (\n//       nombre.valido === 'true' &&\n//       precio.valido === 'true' &&\n//       stock.valido === 'true' &&\n//       //idproducto.valido === 'true' &&\n//       marca.valido === 'true'\n//     ) {\n//       cambiarFormularioValido(true);\n//       cambiarNombre({ campo: '', valido: null });\n//       cambiarPrecio({ campo: '', valido: null });\n//       cambiarStock({ campo: '', valido: null });\n//       cambiarIdproducto({ campo: '', valido: null });\n//       cambiarMarca({ campo: '', valido: null });\n//     } else {\n//       cambiarFormularioValido(false);\n//     }\n//   }\n//   return (\n//     <main>\n//       <Encabezado className=\"containerHeader\">\n//         <h1 className=\"titulo\">AGREGAR PRODUCTO</h1>\n//       </Encabezado>\n//       <Navegador>\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\n//       </Navegador>\n//       <DivContenedor>\n//         <Formulario action=\"\" onSubmit={onSubmit}>\n//           {/* <InputSelect\n//             estado={idproducto}\n//             cambiarEstado={cambiarIdproducto}\n//             label=\"Tipo de producto:\"\n//             name=\"idproducto\"\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros entero\"\n//             expresionRegular={expresiones.nombre}\n//           /> */}\n//           <Input\n//             estado={nombre}\n//             cambiarEstado={cambiarNombre}\n//             tipo=\"text\"\n//             label=\"Nombre:\"\n//             placeholder=\"Nombre\"\n//             name=\"nombre\"\n//             leyendaError=\"El nombre no puede estar vacio ni tener caracteres especiales como: !@#$%^*(){}\"\n//             expresionRegular={expresiones.nombre}\n//           />\n//           <Input\n//             estado={precio}\n//             cambiarEstado={cambiarPrecio}\n//             tipo=\"text\"\n//             label=\"Precio:\"\n//             placeholder=\"Valor del producto: #.##\"\n//             name=\"precio\"\n//             leyendaError=\"El campo no debe estar vacio, solo puede ingresar numeros con decimales\"\n//             expresionRegular={expresiones.precio}\n//           />\n//           <Input\n//             estado={stock}\n//             cambiarEstado={cambiarStock}\n//             tipo=\"text\"\n//             label=\"Stock:\"\n//             placeholder=\"Cantidad de stock\"\n//             name=\"Stock\"\n//             leyendaError=\"El campo no debe estar vacio, solo puede ingresar numeros hasta 4 digitos\"\n//             expresionRegular={expresiones.stock}\n//           />\n//           <Input\n//             estado={marca}\n//             cambiarEstado={cambiarMarca}\n//             tipo=\"text\"\n//             label=\"Marca:\"\n//             placeholder=\"Marca del producto\"\n//             name=\"marca\"\n//             leyendaError=\"El campo no puede quedar vacio\"\n//             expresionRegular={expresiones.nombre}\n//           />\n//           {formularioValido === false && <MensajeError>\n//             <p>\n//               <FontAwesomeIcon icon={faExclamationTriangle} />\n//               <b>Error:</b> Por favor rellene el formulario correctamente\n//             </p>\n//           </MensajeError>}\n//           <ContenedorBotonCentrado>\n//             <Boton type=\"submit\">Enviar</Boton>\n//             {formularioValido === true && <MensajeExito>El formulario se envio correctamente!</MensajeExito>}\n//           </ContenedorBotonCentrado>\n//         </Formulario>\n//       </DivContenedor>\n//     </main>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/cgonz/Proyecto/formulario/src/componentes/Formulario_Producto.js"],"names":["React","useState","Formulario","ContenedorBotonCentrado","Boton","MensajeExito","LeyendaError","MensajeError","DivContenedor","Input","Encabezado","Enlace","Navegador","Label","FontAwesomeIcon","faExclamationTriangle","faCartShopping","faI","esNombre","esPrecio","css","InputChecbox","Component","constructor","props","actualizarState","bind","state","activo","InputText","value","error","mensajeError","e","name","target","console","log","validacion","setState","render","label","placeholder","FormularioProductos","submit","nombre","precio","input"],"mappings":"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,eAAe,EAAE,KAAKO;AANxB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,QADR;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,UAAU,EAAEN,QAJd;AAKE,YAAA,YAAY,EAAC,yEALf;AAME,YAAA,eAAe,EAAE,KAAKM;AANxB;AAAA;AAAA;AAAA;AAAA,kBAVF,eAkBE,QAAC,uBAAD;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWkB,MAAX,CAAkBd,KAAlB,IAC5B,KAAKJ,KAAL,CAAWkB,MAAX,CAAkBf,KAAlB,KAA2B,EADC,IACK,KAAKH,KAAL,CAAWmB,MAAX,CAAkBf,KADvB,IACgC,KAAKJ,KAAL,CAAWmB,MAAX,CAAkBhB,KAAlB,KAA4B,EAD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuCD;;AA3E+C;;AA6ElD,eAAea,mBAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeExito,LeyendaError, MensajeError, DivContenedor, Input, Encabezado, Enlace, Navegador, Label } from \"./../elementos/formularios\";\r\nimport './../estilos.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle, faCartShopping, faI } from '@fortawesome/free-solid-svg-icons';\r\n// import Input from \"./../componentes/Input\";\r\nimport { esNombre, esPrecio } from \"./Validaciones\";\r\nimport { css } from \"styled-components\";\r\n\r\n\r\nclass InputChecbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.actualizarState = this.actualizarState.bind(this);\r\n    this.state={activo:false}\r\n  }\r\n}\r\n\r\nclass InputText extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.actualizarState = this.actualizarState.bind(this);\r\n    this.state = {\r\n      value:\"\",\r\n      error:false,\r\n      mensajeError:\"\"\r\n    };\r\n  }\r\n\r\n  actualizarState(e) {\r\n    const {name, value} = e.target;\r\n    console.log(this.props.validacion(value));\r\n\r\n    if (this.props.validacion(value)){\r\n      this.setState({\r\n        value,\r\n        error:false,\r\n        mensajeError:\"\"\r\n      });\r\n      this.props.actualizarState({ \r\n        name, value, error: false \r\n      });\r\n    }else{\r\n      this.setState({\r\n        value,\r\n        error:true,\r\n        mensajeError:this.props.mensajeError\r\n      });\r\n      this.props.actualizarState({ \r\n        name, value, error: true \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Label htmlFor={\"id-\"+this.props.name}>{this.props.label}</Label>\r\n        <Input\r\n          id={\"id-\"+this.props.name}\r\n          type=\"text\"\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          onChange={this.actualizarState}\r\n        />\r\n        {\r\n          this.state.error ? (\r\n            <LeyendaError>{this.state.mensajeError}</LeyendaError>\r\n          ):(\"\")\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass FormularioProductos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submit = this.submit.bind(this);\r\n    this.actualizarState = this.actualizarState.bind(this);\r\n    this.state={\r\n      nombre:{\r\n        value: \"\",\r\n        error: false\r\n      },\r\n      precio:{\r\n        value: \"\",\r\n        error: false\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  actualizarState(input) {\r\n    this.setState({\r\n      ...this.state,\r\n      [input.name]:{\r\n        value:input.value,\r\n        error:input.error\r\n      }\r\n    }, ()=>{console.log(this.state);});\r\n\r\n  }\r\n\r\n  submit(e) {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Encabezado>\r\n          <h1 className=\"titulo\">AGREGAR PRODUCTO</h1>\r\n        </Encabezado>\r\n        <Navegador>\r\n          <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\r\n\r\n          <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\r\n        </Navegador>\r\n        <DivContenedor>\r\n          <Formulario onSubmit={this.submit}>\r\n\r\n            <InputText\r\n              label=\"Nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"nombre\"\r\n              validacion={esNombre}\r\n              mensajeError=\"El campo no puede estar vacio, el texto no debe contener caracteres especiales como: !@#$%^*(){}\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <InputText\r\n              label=\"Precio\"\r\n              name=\"precio\"\r\n              placeholder=\"#.##\"\r\n              validacion={esPrecio}\r\n              mensajeError=\"El campo no debe estar vacio, solo puede ingresar numeros con decimales\"\r\n              actualizarState={this.actualizarState}\r\n            />\r\n            <ContenedorBotonCentrado>\r\n              <Boton type=\"submit\" disabled={this.state.nombre.error \r\n              || this.state.nombre.value ===\"\" || this.state.precio.error || this.state.precio.value === \"\"}>\r\n                Enviar\r\n              </Boton>\r\n            </ContenedorBotonCentrado>\r\n          </Formulario>\r\n        </DivContenedor>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default FormularioProductos;\r\n// const FormularioProductos = () => {\r\n//   const [nombre, cambiarNombre] = useState({ campo: '', valido: null });\r\n//   const [precio, cambiarPrecio] = useState({ campo: '', valido: null });\r\n//   const [stock, cambiarStock] = useState({ campo: '', valido: null });\r\n//   const [idproducto, cambiarIdproducto] = useState({ campo: '', valido: null });\r\n//   const [marca, cambiarMarca] = useState({ campo: '', valido: null });\r\n//   const [formularioValido, cambiarFormularioValido] = useState(null);\r\n//   const expresiones = {\r\n//     // usuario: /^[a-zA-Z0-9\\_\\-]{4,16}$/, // Letras, numeros, guion y guion_bajo\r\n//     nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\r\n//     // password: /^.{4,12}$/, // 4 a 12 digitos.\r\n//     //correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n//     telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\r\n//     precio: /^[\\d{1,4}]+.[\\d{1,2}]+$/,\r\n//     stock: /^\\d{1,4}$/,\r\n//     idproducto: /^\\d{1,4}$/\r\n//   }\r\n//   const onSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (\r\n//       nombre.valido === 'true' &&\r\n//       precio.valido === 'true' &&\r\n//       stock.valido === 'true' &&\r\n//       //idproducto.valido === 'true' &&\r\n//       marca.valido === 'true'\r\n//     ) {\r\n//       cambiarFormularioValido(true);\r\n//       cambiarNombre({ campo: '', valido: null });\r\n//       cambiarPrecio({ campo: '', valido: null });\r\n//       cambiarStock({ campo: '', valido: null });\r\n//       cambiarIdproducto({ campo: '', valido: null });\r\n//       cambiarMarca({ campo: '', valido: null });\r\n\r\n\r\n//     } else {\r\n//       cambiarFormularioValido(false);\r\n//     }\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <main>\r\n//       <Encabezado className=\"containerHeader\">\r\n//         <h1 className=\"titulo\">AGREGAR PRODUCTO</h1>\r\n//       </Encabezado>\r\n//       <Navegador>\r\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faI} /> Inicio</Enlace>\r\n\r\n//         <Enlace href=\"#\"><FontAwesomeIcon icon={faCartShopping} /> Carrito</Enlace>\r\n//       </Navegador>\r\n//       <DivContenedor>\r\n//         <Formulario action=\"\" onSubmit={onSubmit}>\r\n//           {/* <InputSelect\r\n//             estado={idproducto}\r\n//             cambiarEstado={cambiarIdproducto}\r\n//             label=\"Tipo de producto:\"\r\n//             name=\"idproducto\"\r\n//             leyendaError=\"El campo no puede quedar vacio, solo puede ingresar numeros entero\"\r\n//             expresionRegular={expresiones.nombre}\r\n//           /> */}\r\n//           <Input\r\n//             estado={nombre}\r\n//             cambiarEstado={cambiarNombre}\r\n//             tipo=\"text\"\r\n//             label=\"Nombre:\"\r\n//             placeholder=\"Nombre\"\r\n//             name=\"nombre\"\r\n//             leyendaError=\"El nombre no puede estar vacio ni tener caracteres especiales como: !@#$%^*(){}\"\r\n//             expresionRegular={expresiones.nombre}\r\n//           />\r\n//           <Input\r\n//             estado={precio}\r\n//             cambiarEstado={cambiarPrecio}\r\n//             tipo=\"text\"\r\n//             label=\"Precio:\"\r\n//             placeholder=\"Valor del producto: #.##\"\r\n//             name=\"precio\"\r\n//             leyendaError=\"El campo no debe estar vacio, solo puede ingresar numeros con decimales\"\r\n//             expresionRegular={expresiones.precio}\r\n//           />\r\n//           <Input\r\n//             estado={stock}\r\n//             cambiarEstado={cambiarStock}\r\n//             tipo=\"text\"\r\n//             label=\"Stock:\"\r\n//             placeholder=\"Cantidad de stock\"\r\n//             name=\"Stock\"\r\n//             leyendaError=\"El campo no debe estar vacio, solo puede ingresar numeros hasta 4 digitos\"\r\n//             expresionRegular={expresiones.stock}\r\n//           />\r\n\r\n//           <Input\r\n//             estado={marca}\r\n//             cambiarEstado={cambiarMarca}\r\n//             tipo=\"text\"\r\n//             label=\"Marca:\"\r\n//             placeholder=\"Marca del producto\"\r\n//             name=\"marca\"\r\n//             leyendaError=\"El campo no puede quedar vacio\"\r\n//             expresionRegular={expresiones.nombre}\r\n//           />\r\n\r\n\r\n\r\n//           {formularioValido === false && <MensajeError>\r\n//             <p>\r\n//               <FontAwesomeIcon icon={faExclamationTriangle} />\r\n//               <b>Error:</b> Por favor rellene el formulario correctamente\r\n//             </p>\r\n//           </MensajeError>}\r\n//           <ContenedorBotonCentrado>\r\n//             <Boton type=\"submit\">Enviar</Boton>\r\n//             {formularioValido === true && <MensajeExito>El formulario se envio correctamente!</MensajeExito>}\r\n//           </ContenedorBotonCentrado>\r\n//         </Formulario>\r\n//       </DivContenedor>\r\n//     </main>\r\n//   );\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}